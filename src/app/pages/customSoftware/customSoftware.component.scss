@use '../../style/_variabiles.scss' as vars;
@use 'sass:math';

.custom-software-section {
    background-color: vars.$background-light;
    color: vars.$text-dark;
    padding: vars.$padding-box;

    h2 {
        color: vars.$topbar-color; // Applica lo stesso colore dei titoli
    }

    .title {
        font-size: vars.$font-size-title;
        color: vars.$topbar-color;
        margin-bottom: vars.$gap;
    }

    .description {
        font-size: vars.$font-size-md; // Usa una dimensione del font media
        line-height: 1.8; // Aumenta la spaziatura tra le righe
        color: vars.$text-dark; // Assicura un buon contrasto
        margin-bottom: math.div(vars.$gap, 1.5); // Aggiungi più spazio sotto il paragrafo
    }

    .advantages {
        list-style: none;
        padding: 0;
        margin-bottom: math.div(vars.$gap, 0.5);
        display: flex;
        flex-direction: column;
        gap: math.div(vars.$gap, 1.5);

        li {
            font-size: vars.$font-size-md; // Riduci ulteriormente la dimensione del font
            display: flex;
            align-items: center;
            gap: 0.3rem;
            padding: 0;
            background-color: transparent;
            border: none;
            box-shadow: none;
            transition: none;

            &:hover {
                transform: none;
                box-shadow: none;
            }

            &::before {
                content: '✔️';
                font-size: vars.$font-size-xl;
                color: vars.$topbar-color; // Cambia il colore per abbinarlo alla classe .title
            }
        }
    }

    .divider {
        border: none;
        border-top: 1px solid vars.$apple-border-color;
        margin: math.div(vars.$gap, 0.5) 0;
    }

    .steps {
        list-style: decimal;
        padding-left: 2rem;
        margin-bottom: vars.$gap;
        font-size: vars.$font-size-lg;
        line-height: 1.8;

        li {
            margin-bottom: math.div(vars.$gap-size, 2);
            font-size: vars.$font-size-text;

            strong {
                color: vars.$topbar-color;
                font-size: vars.$font-size-xl;
            }
        }

        background-color: vars.$apple-background-color;
        padding: vars.$padding-box;
        border-radius: vars.$border-radius;
        box-shadow: vars.$box-shadow-hover;

        .step {
            margin-bottom: math.div(vars.$gap, 2);
            padding: vars.$padding-base;
            border: 1px solid vars.$apple-border-color;
            border-radius: vars.$border-radius;
            background-color: vars.$background-light;

            h3 {
                font-size: vars.$font-size-xl;
                color: vars.$text-color-oneblade;
                margin-bottom: vars.$gap;
            }

            p {
                font-size: vars.$font-size-md;
                color: vars.$text-dark;
                line-height: 1.6;
            }
        }

        .step:last-child {
            margin-bottom: 0;
        }
    }

    .steps-horizontal {
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        margin-top: math.div(vars.$gap, 2);
        padding: 0 math.div(vars.$gap, 0.5);

        &::before {
            content: none;
        }

        .step {
            position: relative;
            text-align: center;
            z-index: 2;

            .step-point {
                width: 50px;
                height: 50px;
                margin: 0 auto;
                background-color: vars.$topbar-color;
                color: vars.$text-light;
                border-radius: 50%;
                display: flex;
                justify-content: center;
                align-items: center;
                font-size: vars.$font-size-md;
                font-weight: bold;
                position: relative;
                z-index: 2;
            }

            h3 {
                font-size: vars.$font-size-lg;
                color: vars.$text-dark;
                margin-top: math.div(vars.$gap, 2);
            }

            p {
                font-size: vars.$font-size-text;
                color: vars.$text-dark;
                line-height: 1.6;
                margin-top: math.div(vars.$gap, 4);
            }
        }
    }

    .step-container {
        position: relative;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: math.div(vars.$gap, 2);
        padding: 0 math.div(vars.$gap, 0.5);

        .progress-bar {
            position: absolute;
            top: 50%;
            left: 20px;
            right: 20px;
            height: 4px;
            background-color: vars.$input-border-color;
            z-index: 0;

            .step-tick {
                position: absolute;
                top: 50%;
                width: 2px;
                height: 10px;
                background-color: vars.$primary-color;
                transform: translateY(-50%);

                &:nth-child(1) {
                    left: calc(20px + ((100% - 40px) / 3) * 0);
                }

                &:nth-child(2) {
                    left: calc(20px + ((100% - 40px) / 3) * 1);
                }

                &:nth-child(3) {
                    left: calc(20px + ((100% - 40px) / 3) * 2);
                }

                &:nth-child(4) {
                    left: calc(20px + ((100% - 40px) / 3) * 3);
                }
            }
        }

        .step {
            position: relative;
            z-index: 1;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: vars.$input-border-color;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: vars.$font-color-white;

            .circle {
                display: flex;
                align-items: center;
                justify-content: center;
                width: 40px;
                height: 40px;
                border-radius: 50%;
                background-color: vars.$input-border-color;
                color: vars.$font-color-white;
                font-weight: bold;
                line-height: 40px;
            }

            &.completed .circle {
                background-color: vars.$primary-color;
            }
        }
    }

    .steps-boxes {
        display: flex;
        justify-content: space-between;
        gap: math.div(vars.$gap, 0.5);
        margin-top: math.div(vars.$gap, 2);

        .step-box {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: flex-start; // Allinea il contenuto verso l'alto
            align-items: flex-start;
            padding: vars.$padding-box;
            background-color: vars.$background-light;
            border: 1px solid vars.$apple-border-color;
            border-radius: vars.$border-radius;
            box-shadow: vars.$box-shadow-hover;
            text-align: left;
            transition: transform vars.$transition-speed, box-shadow vars.$transition-speed;
            height: 200px;

            &:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }

            h3 {
                font-size: vars.$font-size-lg;
                color: vars.$text-color-oneblade;
                margin-bottom: math.div(vars.$gap, 2);
            }

            p {
                font-size: vars.$font-size-text;
                color: vars.$text-dark;
                line-height: 1.6;
                margin-top: 0; // Rimuovi margine superiore per partire dall'alto
            }
        }
    }

    img {
        border-radius: 15px;
    }

    // Media queries for responsiveness
    @media (max-width: 1200px) {
        .steps-boxes {
            gap: math.div(vars.$gap, 2);
        }

        .step-box {
            padding: math.div(vars.$padding-box, 1.5);
        }
    }

    @media (max-width: 992px) {
        .steps-boxes {
            flex-wrap: wrap;
            gap: vars.$gap;
        }

        .step-box {
            flex: 0 0 calc(50% - vars.$gap);
        }
    }

    @media (max-width: 768px) {
        .steps-boxes {
            flex-direction: column;
            gap: vars.$gap;
        }

        .step-box {
            flex: 1;
        }

        .title {
            font-size: vars.$font-size-lg;
        }

        .description {
            font-size: vars.$font-size-md;
        }
    }

    @media (max-width: 576px) {
        .custom-software-image {
            height: 300px; // Riduci l'altezza dell'immagine per schermi piccoli
        }

        .title {
            font-size: vars.$font-size-md; // Usa il prefisso del modulo
        }

        .description {
            font-size: vars.$font-size-sm; // Usa il prefisso del modulo
        }

        .advantages li {
            font-size: vars.$font-size-sm; // Usa il prefisso del modulo
        }

        .steps-boxes {
            gap: math.div(vars.$gap, 2);
        }

        .step-box {
            padding: math.div(vars.$padding-box, 2);
        }
    }

    .cta {
        font-size: vars.$font-size-subtitle;
        line-height: 1.6;

        strong {
            color: vars.$topbar-color;
        }
    }

    .row {
        @media (max-width: 576px) {
            text-align: center; // Center-align content for smaller screens
        }
    }

    .responsive-image {
        margin: 0 auto; // Center the image on smaller screens
        max-width: 100%; // Ensure the image doesn't exceed the container width
    }
}

.breadcrumb {
    background-color: transparent; // Transparent background
    padding: 0; // Remove padding
    margin-bottom: vars.$gap-size; // Add spacing below breadcrumb
    font-size: vars.$font-size-sm; // Use small font size
    display: flex; // Ensure items are aligned horizontally
    align-items: center; // Center items vertically
}

.breadcrumb-item a,
.breadcrumb-item.active {
    color: vars.$text-color-oneblade; // Make all breadcrumb text the same color as "Home"
    text-decoration: none; // Remove underline
    transition: color vars.$transition-speed; // Smooth transition for hover effect

    &:hover {
        color: darken(vars.$text-color-oneblade, 10%); // Darken color on hover
        cursor: pointer; // Add pointer cursor
    }
}

.breadcrumb-separator {
    margin: 0 math.div(vars.$gap-size, 2); // Reduce spacing around the separator
    padding: 0 math.div(vars.$gap-size, 2); // Reduce padding to the left and right of the separator
    color: vars.$text-color-oneblade; // Match the color of breadcrumb text
    font-weight: bold; // Make the separator prominent
}